{"version":3,"sources":["../../src/core/common/utils.js"],"names":["omit","range","extendStyle","obj","keys","every","key","Error","Object","reduce","result","includes","length","Array","from","v","i","base","extension","property","isObject"],"mappings":";;;;;;;;QAAgBA,I,GAAAA,I;QAcAC,K,GAAAA,K;QAKAC,W,GAAAA,W;;;;AAnBT,SAASF,IAAT,CAAcG,GAAd,EAA2B;AAAA,sCAALC,IAAK;AAALA,YAAK;AAAA;;AAE9B,QAAG,CAACA,KAAKC,KAAL,CAAW;AAAA,eAAO,OAAOC,GAAP,KAAe,QAAtB;AAAA,KAAX,CAAJ,EAA+C;AAC3C,cAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACH;;AAED,WAAOC,OAAOJ,IAAP,CAAYD,GAAZ,EAAiBM,MAAjB,CACH,UAACC,MAAD,EAASJ,GAAT;AAAA,eAAkBF,KAAKO,QAAL,CAAcL,GAAd,IACZI,MADY,gBAERA,MAFQ,sBAECJ,GAFD,EAEOH,IAAIG,GAAJ,CAFP,EAAlB;AAAA,KADG,EAIH,EAJG,CAAP;AAMH;;AAEM,SAASL,KAAT,CAAeW,MAAf,EAAuB;AAC1B,WAAOC,MAAMC,IAAN,CAAW,EAACF,QAAQA,MAAT,EAAX,EAA6B,UAACG,CAAD,EAAGC,CAAH;AAAA,eAASA,CAAT;AAAA,KAA7B,CAAP;AACH;;AAED;AACO,SAASd,WAAT,GAAgD;AAAA,QAA3Be,IAA2B,uEAApB,EAAoB;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;;AACnD,QAAMd,OAAOI,OAAOJ,IAAP,CAAYa,IAAZ,CAAb;AACA,WAAOT,OAAOJ,IAAP,CAAYc,SAAZ,EAAuBT,MAAvB,CACH,UAACC,MAAD,EAASS,QAAT;AAAA,4BAEWT,MAFX,sBAIaS,QAJb,EAIwBf,KAAKO,QAAL,CAAcQ,QAAd,KAA2BC,SAASH,KAAKE,QAAL,CAAT,CAA3B,GACNjB,YAAYe,KAAKE,QAAL,CAAZ,EAA4BD,UAAUC,QAAV,CAA5B,CADM,GAEND,UAAUC,QAAV,CANlB;AAAA,KADG,EAUAF,IAVA,CAAP;AAYH;;AAED,SAASG,QAAT,CAAkBjB,GAAlB,EAAuB;AACnB,WAAOA,QAAQK,OAAOL,GAAP,CAAf;AACH","file":"utils.js","sourcesContent":["export function omit(obj, ...keys){\n\n    if(!keys.every(key => typeof key === 'string')){\n        throw new Error(\"Key should be of type string\")\n    }\n\n    return Object.keys(obj).reduce(\n        (result, key) =>  keys.includes(key)\n            ? result\n            : {...result, [key]: obj[key]},\n        {}\n    )\n}\n\nexport function range(length) {\n    return Array.from({length: length}, (v,i) => i)\n}\n\n// Use this only for styles\nexport function extendStyle(base = {}, extension = {}) {\n    const keys = Object.keys(base)\n    return Object.keys(extension).reduce(\n        (result, property) => (\n            {\n                ...result,\n                ...({\n                    [property]: keys.includes(property) && isObject(base[property])\n                        ? extendStyle(base[property], extension[property])\n                        : extension[property]\n                })\n            }\n        ), base\n    )\n}\n\nfunction isObject(obj) {\n    return obj === Object(obj)\n}\n"]}