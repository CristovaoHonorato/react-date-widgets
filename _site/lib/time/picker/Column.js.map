{"version":3,"sources":["../../../src/core/time/picker/Column.js"],"names":["containerLayoutStyle","display","verticalAlign","borderWidth","borderStyle","marginLeft","boxSizing","borderRight","overflowX","overflowY","position","ulLayoutStyle","listStyle","margin","padding","width","maxHeight","Column","props","options","style","selectedIndex","onChange","ulStyle","ul","entryStyle","entry","restStyle","className","ref","list","map","index","disabled","value","key","selected","duration","select","findDOMNode","topOption","children","to","offsetTop","scrollTo","scrollToSelected","prevProps","propTypes","array","number","type","string","func","onMouseEnter","defaultProps","li","element","requestAnimationFrame","window","requestAnimationFrameTimeout","setTimeout","arguments","scrollTop","difference","perTick"],"mappings":"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","file":"Column.js","sourcesContent":["import React, { PropTypes, Component } from 'react'\nimport ReactDom from 'react-dom'\nimport { extendStyle } from '../../common/utils'\nimport Entry from './Entry'\n\nconst containerLayoutStyle = {\n    display: 'inline-block',\n    verticalAlign:'top',\n    borderWidth: '0 1px',\n    borderStyle: 'solid',\n    marginLeft: 0,\n    boxSizing: 'border-box',\n    borderRight: 'none',\n    overflowX: 'hidden',\n    overflowY: 'scroll',\n    position: 'relative',\n}\n\nconst ulLayoutStyle = {\n    listStyle: 'none',\n    boxSizing: 'border-box',\n    margin: 0,\n    padding: 0,\n    width: '100%',\n    maxHeight: '144px',\n}\n\nexport default class Column extends Component {\n\n    render() {\n\n        const { options, style, selectedIndex, onChange } = this.props\n        const { ul: ulStyle, entry: entryStyle, ...restStyle } = style\n\n        return (\n            <div {...{\n                className: 'panel-column',\n                style: extendStyle(containerLayoutStyle, restStyle)\n            }}>\n                <ul {...{\n                    ref: (ref) => {this.list = ref},\n                    style: extendStyle(ulLayoutStyle, ulStyle),\n                }}>\n                    {options.map(({disabled, value}, index) => (\n                        <Entry {...{\n                            key: index,\n                            disabled,\n                            selected: selectedIndex === index,\n                            style: entryStyle,\n                            value,\n                            onChange\n                        }}/>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n\n    scrollToSelected(duration) {\n        // move to selected item\n        const select = ReactDom.findDOMNode(this)\n        const list = ReactDom.findDOMNode(this.list)\n        if (!list) {\n            return\n        }\n        let index = this.props.selectedIndex\n        if (index < 0) {\n            index = 0\n        }\n        const topOption = list.children[index]\n        const to = topOption.offsetTop\n        scrollTo(select, to, duration)\n    }\n\n\n    componentDidMount() {\n        // jump to selected option\n        this.scrollToSelected(0)\n    }\n\n    componentDidUpdate(prevProps) {\n        // smooth scroll to selected option\n        if (prevProps.selectedIndex !== this.props.selectedIndex) {\n            this.scrollToSelected(120)\n        }\n    }\n}\n\nColumn.propTypes = {\n    options: PropTypes.array,\n    selectedIndex: PropTypes.number,\n    type: PropTypes.string,\n    onChange: PropTypes.func,\n    onMouseEnter: PropTypes.func\n}\n\nColumn.defaultProps = {\n    style: {\n        li: {\n            selected: {},\n            disabled: {},\n        }\n    }\n}\n\nfunction scrollTo(element, to, duration) {\n    const requestAnimationFrame = window.requestAnimationFrame ||\n        function requestAnimationFrameTimeout() {\n            return setTimeout(arguments[0], 10)\n        }\n    // jump to target if duration zero\n    if (duration <= 0) {\n        element.scrollTop = to\n        return\n    }\n    const difference = to - element.scrollTop\n    const perTick = difference / duration * 10\n\n    requestAnimationFrame(() => {\n        element.scrollTop += perTick\n        if (element.scrollTop === to)\n            return\n        scrollTo(element, to, duration - 10)\n    })\n}\n"]}