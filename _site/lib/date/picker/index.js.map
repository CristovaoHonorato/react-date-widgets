{"version":3,"sources":["../../../src/core/date/picker/index.js"],"names":["DatePicker","props","state","mode","day","style","rest"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,U;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,kBAAM;AADG,SAAb;AAFe;AAKlB;;;;iCAEQ;AAAA,yBAC+B,KAAKF,KADpC;AAAA,gBACYG,GADZ,UACGC,KADH,CACYD,GADZ;AAAA,gBACsBE,IADtB;;AAEL,oBAAO,KAAKJ,KAAL,CAAWC,IAAlB;AACI,qBAAK,KAAL;AACI,2BAAO,0DAAmBG,IAAnB,IAAyBD,OAAOD,GAAhC,IAAP;AACJ;AACI,2BAAO,0DAAmBE,IAAnB,IAAyBD,OAAOD,GAAhC,IAAP;AAJR;AAMH;;AAED;;;;;;;;;;;;;kBAlBiBJ,U","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport DayPicker from './day'\n\nexport default class DatePicker extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            mode: 'day'\n        }\n    }\n\n    render() {\n        const { style: { day }, ...rest } = this.props\n        switch(this.state.mode) {\n            case 'day':\n                return <DayPicker {...{...rest, style: day}} />\n            default:\n                return <DayPicker {...{...rest, style: day}} />\n        }\n    }\n\n    /*\n    componentWillReceiveProps(nextProps) {\n        const { mode } = nextProps\n        if(mode && mode !== this.state.mode)\n            this.setState({mode})\n    }\n    */\n}\n"]}